#include <Wire.h>  // Only needed for Arduino 1.6.5 and earlier
#include <WiFi.h>
#include <Arduino.h>
#include <U8g2lib.h>
#include "time.h"
#include <ArduinoJson.h>
#include <Adafruit_NeoPixel.h>

/***************创建任务****************/
/*
* 初始化
* 执行周期：0xffff
* 优先度
*/
#define ProjInit_TASK_PRIO  1          // 任务优先级
#define ProjInit_STK_SIZE   1024 * 3        // 任务堆栈大小 8 * 10字节
TaskHandle_t ProjInit_TaskHandle = NULL; // 任务句柄
void ProjInit(void *pvParameters);
/*
* 获取天气数据更新
* 执行周期：6000ms
* 优先度1
*/
#define WeatherUpdate_TASK_PRIO  1          // 任务优先级
#define WeatherUpdate_STK_SIZE   1024 * 2        // 任务堆栈大小
TaskHandle_t WeatherUpdate_TaskHandle = NULL; // 任务句柄
void WeatherUpdate(void *pvParameters); //任务函数
/*
* LED时钟更新
* 执行周期：100ms
* 优先度1
*/
#define LEDclock_TASK_PRIO  1          // 任务优先级
#define LEDclock_STK_SIZE   1024 * 2        // 任务堆栈大小
TaskHandle_t LEDclock_TaskHandle = NULL; // 任务句柄
void LEDclock(void *pvParameters); //任务函数
/*
* OLED更新
* 执行周期：500ms
* 优先度1
*/
#define OLEDupdate_TASK_PRIO  1        // 任务优先级
#define OLEDupdate_STK_SIZE   1024 * 2        // 任务堆栈大小
TaskHandle_t OLEDupdate_TaskHandle = NULL; // 任务句柄
void OLEDupdate(void *pvParameters); //任务函数

/*******ws2812 LED clock************/
#define PIN_hour  32
#define NUM_hour 12
#define PIN_minute  33
#define NUM_minute 24
Adafruit_NeoPixel hour(NUM_hour, PIN_hour, NEO_GRB + NEO_KHZ800);
Adafruit_NeoPixel minute(NUM_minute, PIN_minute, NEO_GRB + NEO_KHZ800);

/**********OLED初始化************/
U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/U8X8_PIN_NONE, /* clock=*/18, /* data=*/19);  // ESP32 Thing, HW I2C with pin remapping

/**********Weather LOGO*************/
const uint8_t qingtianbaitian[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,
  0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0xC0,0x80,0x01,0x03,0xC0,0x81,0x81,0x03,
  0x80,0x03,0xC0,0x03,0x00,0xE7,0xE7,0x01,0x00,0xFE,0xDF,0x00,0x00,0x3C,0x3C,0x00,
  0x00,0x1C,0x78,0x00,0x00,0x0E,0x70,0x00,0x00,0x06,0x60,0x00,0xFC,0x06,0xE0,0x3F,
  0xFC,0x06,0xE0,0x3F,0x00,0x06,0x60,0x00,0x00,0x0E,0x60,0x00,0x00,0x1C,0x70,0x00,
  0x00,0x3C,0x38,0x00,0x00,0xFA,0x7F,0x00,0x00,0xF7,0xEF,0x00,0x80,0x87,0xC1,0x01,
  0xC0,0x83,0x81,0x03,0xC0,0x81,0x01,0x03,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,
  0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

const uint8_t qingtianyewan[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0x07,0x00,
  0x00,0x18,0x1C,0x00,0x00,0x10,0x70,0x00,0x00,0x30,0xC0,0x00,0x00,0x20,0x80,0x01,
  0x00,0x60,0x00,0x01,0x00,0x40,0x00,0x02,0x00,0x40,0x00,0x06,0x00,0x40,0x00,0x04,
  0x00,0x40,0x00,0x04,0x00,0x40,0x00,0x0C,0x00,0x40,0x00,0x0C,0x00,0x40,0x00,0x0C,
  0x00,0x40,0x00,0x0C,0x00,0x60,0x00,0x0C,0x00,0x20,0x00,0x0C,0x00,0x30,0x00,0x04,
  0x00,0x18,0x00,0x04,0x00,0x0C,0x00,0x06,0x00,0x06,0x00,0x02,0x80,0x03,0x00,0x01,
  0xE0,0x00,0x80,0x01,0x60,0x00,0xC0,0x00,0xC0,0x01,0x70,0x00,0x00,0x07,0x1C,0x00,
  0x00,0xFC,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

const uint8_t baoxue[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0xF8,0x07,0x00,0x00,0x0C,0x0C,0x00,
  0x00,0x06,0x78,0x00,0x00,0x02,0xF0,0x01,0x00,0x03,0x00,0x03,0xC0,0x01,0x00,0x06,
  0x60,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,
  0x60,0x00,0x00,0x06,0x40,0x00,0x00,0x03,0x80,0xFF,0xFF,0x01,0x00,0xFE,0x3F,0x00,
  0x00,0x00,0x00,0x00,0x80,0x20,0x04,0x01,0xA0,0x2A,0x54,0x05,0xE0,0x79,0x9E,0x07,
  0xE0,0x79,0x9E,0x07,0xA0,0x20,0x44,0x05,0x80,0x00,0x00,0x01,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

const uint8_t baoyu[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0x38,0x07,0x00,0x00,0x0C,0x0C,0x00,
  0x00,0x06,0x70,0x00,0x00,0x02,0xF0,0x01,0x80,0x01,0x00,0x03,0xC0,0x00,0x00,0x06,
  0x60,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,
  0x60,0x00,0x00,0x02,0xC0,0x00,0x00,0x03,0x80,0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,
  0x00,0x00,0x40,0x00,0x00,0x44,0x44,0x00,0x00,0x66,0x66,0x00,0x00,0x22,0x32,0x00,
  0x00,0x33,0x11,0x00,0x00,0x91,0x19,0x00,0x80,0x88,0x08,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

const uint8_t daxue[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0xF8,0x07,0x00,0x00,0x0C,0x0C,0x00,
  0x00,0x06,0x78,0x00,0x00,0x02,0xF0,0x01,0x00,0x03,0x00,0x03,0xC0,0x01,0x00,0x06,
  0x60,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,
  0x60,0x00,0x00,0x06,0x40,0x00,0x00,0x03,0x80,0xFF,0xFF,0x01,0x00,0xFE,0x3F,0x00,
  0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x80,0xCA,0x53,0x01,0x00,0xCF,0xF3,0x00,
  0x00,0xCF,0xF3,0x00,0x80,0x0A,0x50,0x01,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t dayu[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0x38,0x07,0x00,0x00,0x0C,0x0C,0x00,
  0x00,0x06,0x70,0x00,0x00,0x02,0xF0,0x01,0x80,0x01,0x00,0x03,0xC0,0x00,0x00,0x06,
  0x60,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,
  0x60,0x00,0x00,0x02,0xC0,0x00,0x00,0x03,0x80,0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,
  0x00,0x00,0x40,0x00,0x00,0x44,0x44,0x00,0x00,0x66,0x66,0x00,0x00,0x22,0x32,0x00,
  0x00,0x33,0x11,0x00,0x00,0x91,0x19,0x00,0x80,0x88,0x08,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t dongyu[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0xF8,0x07,0x00,0x00,0x0C,0x0C,0x00,
  0x00,0x06,0x78,0x00,0x00,0x02,0xD0,0x01,0x80,0x03,0x00,0x03,0xC0,0x00,0x00,0x02,
  0x40,0x00,0x00,0x02,0x60,0x00,0x00,0x02,0x60,0x00,0x00,0x02,0x40,0x00,0x00,0x02,
  0xC0,0x00,0x00,0x03,0x80,0x01,0xC0,0x01,0x00,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,
  0x00,0x12,0x89,0x00,0x00,0x93,0x49,0x00,0x00,0x99,0x64,0x00,0x80,0xC9,0x26,0x00,
  0x80,0x40,0x22,0x00,0x40,0x20,0x01,0x00,0x40,0x22,0x11,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t duoyun[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x02,0x00,
  0x00,0x08,0x82,0x01,0x00,0x18,0xC0,0x00,0x00,0xB0,0x4F,0x00,0x00,0xC0,0x18,0x00,
  0x00,0x60,0x30,0x00,0x00,0xF8,0x23,0x00,0x00,0x0C,0x6E,0x07,0x00,0x06,0x78,0x07,
  0x00,0x02,0xF0,0x00,0x00,0x01,0x80,0x01,0xC0,0x01,0x00,0x03,0x40,0x00,0x00,0x02,
  0x20,0x00,0x00,0x06,0x20,0x00,0x00,0x06,0x20,0x00,0x00,0x02,0x20,0x00,0x00,0x02,
  0x60,0x00,0x00,0x03,0xC0,0xFF,0xFF,0x01,0x00,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t leizhenyu[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0xF8,0x07,0x00,0x00,0x0C,0x0C,0x00,
  0x00,0x06,0x78,0x00,0x00,0x02,0xF0,0x01,0x80,0x03,0x00,0x03,0xC0,0x00,0x00,0x06,
  0x60,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x06,
  0x60,0x00,0x00,0x06,0xC0,0x00,0x00,0x03,0x80,0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x8C,0x41,0x00,0x00,0x84,0x21,0x00,0x00,0xC6,0x31,0x00,
  0x00,0x82,0x11,0x00,0x00,0x81,0x18,0x00,0x00,0x41,0x08,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t leizhenyubanbingbao[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0x38,0x07,0x00,0x00,0x0C,0x0C,0x00,
  0x00,0x06,0x78,0x00,0x00,0x02,0xC0,0x01,0x80,0x03,0x00,0x03,0xC0,0x00,0x00,0x02,
  0x40,0x00,0x00,0x02,0x60,0x00,0x00,0x02,0x60,0x00,0x00,0x02,0x40,0x00,0x00,0x02,
  0xC0,0x00,0x00,0x01,0x80,0xFF,0xFF,0x01,0x00,0xFE,0x7F,0x00,0x00,0x00,0x00,0x00,
  0x00,0x84,0x20,0x00,0x00,0xC4,0x20,0x00,0x00,0xC6,0x31,0x00,0x00,0xC2,0x11,0x00,
  0x00,0x83,0x00,0x00,0x80,0x41,0x04,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t shachenbao[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x00,0xC0,0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0xFC,0xFF,0x03,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xFC,0x7F,0x00,0x00,0xFE,0x7F,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xFF,0x03,0x00,0x00,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xFC,0x01,0x00,0x00,0xFC,0x01,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t wu[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0x38,0x06,0x00,0x00,0x0C,0x08,0x00,
  0x00,0x06,0x70,0x00,0x00,0x02,0xC0,0x01,0x80,0x01,0x00,0x03,0xC0,0x00,0x00,0x06,
  0x60,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,
  0x60,0x00,0x00,0x02,0xC0,0x00,0x00,0x03,0x80,0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t wumai[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x03,0xC0,0xFF,0xFF,0x03,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x01,0xC0,0xFF,0xFF,0x03,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x03,
  0x80,0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x99,0x99,0x01,
  0x80,0x08,0x10,0x01,0x00,0x62,0x66,0x00,0x00,0x66,0x66,0x00,0x00,0x00,0x00,0x00,
  0x80,0x99,0x99,0x01,0x80,0x98,0x19,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t xiaoxue[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0xF8,0x07,0x00,0x00,0x0C,0x0C,0x00,
  0x00,0x06,0x78,0x00,0x00,0x02,0xF0,0x01,0x00,0x03,0x00,0x03,0xC0,0x00,0x00,0x06,
  0x60,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,
  0x60,0x00,0x00,0x02,0xC0,0x00,0x00,0x03,0x80,0xFF,0xFF,0x01,0x00,0xFE,0x3F,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x03,0x00,0x00,0xC0,0x03,0x00,
  0x00,0xC0,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t xiaoyu[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0x38,0x07,0x00,0x00,0x0C,0x0C,0x00,
  0x00,0x06,0x70,0x00,0x00,0x02,0xF0,0x01,0x00,0x03,0x00,0x03,0xC0,0x00,0x00,0x06,
  0x60,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,
  0x60,0x00,0x00,0x02,0x40,0x00,0x00,0x03,0x80,0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x8C,0x31,0x00,0x00,0x84,0x10,0x00,0x00,0x00,0x00,0x00,
  0x00,0x43,0x08,0x00,0x00,0x21,0x0C,0x00,0x00,0x21,0x04,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t yangsha[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0xC0,0x01,0x00,0x00,0x40,0xC2,0x03,0x00,0x00,0x43,0x06,0xE0,0xFF,0x61,0x04,
  0x00,0x00,0x00,0x06,0xE0,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,
  0xE0,0xFF,0xFF,0x00,0x00,0x00,0x80,0x01,0x00,0x00,0x00,0x01,0x60,0x93,0x10,0x01,
  0x00,0x00,0xF0,0x00,0x80,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x93,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t yejianduoyun[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x00,0x00,0x00,0x68,0x00,0x00,
  0x00,0xC8,0x00,0x00,0x00,0x88,0x01,0x00,0x00,0x08,0x01,0x00,0x00,0x0C,0x01,0x00,
  0x00,0x04,0x03,0x00,0x00,0xE6,0x1F,0x00,0x00,0x33,0x30,0x00,0xF0,0x18,0xE0,0x00,
  0x30,0x08,0xC0,0x03,0x60,0x06,0x00,0x06,0xC0,0x03,0x00,0x0C,0x80,0x01,0x00,0x08,
  0x80,0x00,0x00,0x08,0x80,0x00,0x00,0x08,0x80,0x00,0x00,0x08,0x80,0x01,0x00,0x0C,
  0x00,0x03,0x00,0x06,0x00,0xFE,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t yejianzhenxue[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x50,0x00,0x00,0x00,0x90,0x00,0x00,
  0x00,0x10,0x01,0x00,0x00,0x10,0x01,0x00,0x00,0x88,0x07,0x00,0x00,0x64,0x08,0x00,
  0x80,0x13,0x30,0x00,0x80,0x10,0xC0,0x00,0x00,0x0D,0x00,0x01,0x00,0x06,0x00,0x03,
  0x00,0x02,0x00,0x02,0x00,0x02,0x00,0x02,0x00,0x02,0x00,0x01,0x00,0x04,0x80,0x00,
  0x00,0xF8,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0xE0,0x10,0x00,
  0x00,0xE0,0x38,0x00,0x00,0x40,0x38,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t yejianzhenyu[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x0C,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x48,0x00,0x00,
  0x00,0xC8,0x00,0x00,0x00,0xE8,0x07,0x00,0x00,0x34,0x0C,0x00,0x00,0x1A,0x30,0x00,
  0xC0,0x09,0xF0,0x01,0x80,0x06,0x00,0x03,0x00,0x03,0x00,0x02,0x00,0x01,0x00,0x02,
  0x00,0x01,0x00,0x02,0x00,0x01,0x00,0x02,0x00,0x01,0x00,0x03,0x00,0x02,0x80,0x01,
  0x00,0xFC,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0xC8,0x24,0x00,0x00,0x00,0x01,0x00,
  0x00,0x22,0x09,0x00,0x00,0x40,0x02,0x00,0x00,0x48,0x12,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t yintian[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0xF8,0x07,0x00,0x00,0x0E,0x0C,0x00,0x00,0x03,0x10,0x00,0x00,0x01,0xE0,0x01,
  0x80,0x01,0xE0,0x07,0x80,0x00,0x00,0x0C,0xE0,0x00,0x00,0x08,0x30,0x00,0x00,0x10,
  0x18,0x00,0x00,0x10,0x08,0x00,0x00,0x10,0x08,0x00,0x00,0x10,0x08,0x00,0x00,0x10,
  0x08,0x00,0x00,0x18,0x18,0x00,0x00,0x08,0x30,0x00,0x00,0x0C,0xE0,0xFF,0xFF,0x03,
  0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t yujiabingbao[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0xF8,0x07,0x00,0x00,0x0C,0x0C,0x00,
  0x00,0x06,0x78,0x00,0x00,0x02,0xD0,0x01,0x80,0x03,0x00,0x03,0xC0,0x00,0x00,0x02,
  0x40,0x00,0x00,0x02,0x60,0x00,0x00,0x02,0x60,0x00,0x00,0x02,0x40,0x00,0x00,0x02,
  0xC0,0x00,0x00,0x03,0x80,0x01,0xC0,0x01,0x00,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,
  0x00,0x04,0x21,0x00,0x00,0x84,0x31,0x00,0x00,0x86,0x10,0x00,0x00,0x42,0x18,0x00,
  0x00,0x43,0x08,0x00,0x80,0x01,0x0C,0x00,0x80,0x20,0x04,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t yujiaxue[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0xF8,0x07,0x00,0x00,0x0C,0x0C,0x00,
  0x00,0x06,0x78,0x00,0x00,0x02,0xF0,0x01,0x00,0x03,0x00,0x03,0xC0,0x01,0x00,0x06,
  0x60,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,
  0x60,0x00,0x00,0x06,0xC0,0x00,0x00,0x03,0x80,0xFF,0xFF,0x01,0x00,0xFE,0x3F,0x00,
  0x00,0x00,0x00,0x00,0x00,0x04,0xC2,0x00,0x00,0x1F,0x42,0x00,0x00,0x0E,0x00,0x00,
  0x00,0x9F,0x30,0x00,0x00,0x84,0x10,0x00,0x00,0x80,0x10,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t zhenxue[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xF0,0x07,0x00,0x00,0x0C,0x0C,0x00,0x00,0x06,0x18,0x00,
  0x00,0x02,0xF0,0x00,0x00,0x03,0x00,0x03,0x80,0x01,0x00,0x02,0x40,0x00,0x00,0x06,
  0x60,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x06,
  0x40,0x00,0x00,0x03,0xC0,0x01,0x80,0x01,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,
  0x00,0x08,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x1C,0x10,0x00,0x00,0x3E,0x7C,0x00,
  0x00,0x08,0x38,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t zhenyu[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0x38,0x07,0x00,0x00,0x0C,0x0C,0x00,
  0x00,0x06,0x70,0x00,0x00,0x02,0xF0,0x01,0x80,0x03,0x00,0x03,0xC0,0x00,0x00,0x06,
  0x60,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,
  0x60,0x00,0x00,0x02,0xC0,0x00,0x00,0x03,0x80,0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xCC,0xCC,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x33,0x00,
  0x00,0x00,0x00,0x00,0x00,0x44,0x44,0x00,0x00,0x44,0x44,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t zhongxue[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0xF8,0x07,0x00,0x00,0x0C,0x0C,0x00,
  0x00,0x06,0x78,0x00,0x00,0x02,0xF0,0x01,0x00,0x03,0x00,0x03,0xC0,0x01,0x00,0x06,
  0x60,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,
  0x60,0x00,0x00,0x06,0x40,0x00,0x00,0x03,0x80,0xFF,0xFF,0x01,0x00,0xFE,0x3F,0x00,
  0x00,0x00,0x00,0x00,0x00,0x08,0x10,0x00,0x00,0x28,0x14,0x00,0x00,0x3C,0x3C,0x00,
  0x00,0x3C,0x3C,0x00,0x00,0x08,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t zhongyu[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0x38,0x07,0x00,0x00,0x0C,0x0C,0x00,
  0x00,0x06,0x70,0x00,0x00,0x02,0xF0,0x01,0x80,0x01,0x00,0x03,0xC0,0x00,0x00,0x06,
  0x60,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,0x20,0x00,0x00,0x04,
  0x60,0x00,0x00,0x02,0xC0,0x00,0x00,0x03,0x80,0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,
  0x00,0x00,0x20,0x00,0x00,0x84,0x30,0x00,0x00,0xC6,0x10,0x00,0x00,0x42,0x18,0x00,
  0x00,0x63,0x08,0x00,0x00,0x21,0x04,0x00,0x80,0x31,0x04,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};  

const uint8_t N_A[] PROGMEM = {
  0x00,0xF0,0x0F,0x00,0x00,0x3E,0x7C,0x00,0x80,0x03,0xC0,0x01,0xC0,0x00,0xE0,0x03,
  0x60,0x00,0xF0,0x07,0x30,0x00,0xF8,0x0F,0x38,0x00,0xFC,0x1F,0x7C,0x00,0xFE,0x3F,
  0x7C,0xE0,0xFF,0x3F,0x7E,0xE0,0xFF,0x7F,0x7E,0xE0,0xFF,0x7F,0xFE,0xE0,0xFF,0x7F,
  0xFF,0xE7,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  0xFF,0xFF,0xC7,0xFF,0xFF,0xFF,0x81,0xFF,0xFF,0xFF,0x01,0xFF,0xFF,0xFF,0x00,0xFE,
  0xFE,0xFF,0x01,0x78,0xFE,0xFF,0x03,0x78,0xFE,0xFF,0x03,0x78,0xFC,0xFF,0x07,0x38,
  0xFC,0xFF,0x0F,0x38,0xF8,0xFF,0x1F,0x1C,0xF0,0xFF,0x1F,0x0C,0xE0,0xFF,0x1F,0x06,
  0xC0,0xFF,0x1F,0x03,0x80,0xFF,0xDF,0x01,0x00,0xFE,0x7F,0x00,0x00,0xF0,0x0F,0x00,
};

int count = 0;
int update = 1;
int code_int_temp = 0;

/*********获取天气*********/
String cityName;
String weather;
String code = "";
String temperature;
int code_int;
const int httpPort = 80;                  //端口号
const char* host = "api.seniverse.com";   //服务器地址
String reqUserKey = "SVnyz4LZkdYpoTav5";  //知心天气API私钥
String reqLocation = "佛山";              //地址
String reqUnit = "c";                     //摄氏度
//-------------------http请求-----------------------------//
String reqRes = "/v3/weather/now.json?key=" + reqUserKey + +"&location=" + reqLocation + "&language=zh-Hans&unit=" + reqUnit;
String httprequest = String("GET ") + reqRes + " HTTP/1.1\r\n" + "Host: " + host + "\r\n" + "Connection: close\r\n\r\n";
//--------------------------------------------------------//

/***********获取网络时间**************/
const long gmtOffset_sec = 8 * 3600;
const int daylightOffset_sec = 0;
const char* ntpServer = "pool.ntp.org";
struct tm timeinfo;

/**************WIFI*************/
/*手机*/
// const char* ssid     = "HUAWEI_STK_9ead";
// const char* password = "13726386023";
/*电脑*/
// const char* ssid     = "YemKayan";
// const char* password = "13726386023";
/*HOME*/
const char* ssid     = "TP-LINK_E179";
const char* password = "RT13415515516";

WiFiServer server(80);

/******************链接WIFI*********************/
void wifi_connect() {
  //提示信息
  Serial.print("Wifi connecting");

  u8g2.setFont(u8g2_font_wqy12_t_gb2312);
  u8g2.setFontDirection(0);

  u8g2.clearBuffer();
  u8g2.setCursor(0, 16);
  u8g2.print("Wifi connecting ...");
  u8g2.sendBuffer();

  //连接Wifi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  }
  Serial.println("\nWifi Connected!");

  u8g2.clearBuffer();
  u8g2.setCursor(0, 16);
  u8g2.print("Wifi connected!!!");
  u8g2.sendBuffer();
  delay(1000);
}

/***************访问网站******************/
void httpRequest() {
  WiFiClient client;
  //1 连接服务器
  if (client.connect(host, httpPort)) {
    Serial.println("连接成功，接下来发送请求");
    client.print(httprequest);  //访问API接口
    String response_status = client.readStringUntil('\n');
    Serial.println(response_status);

    if (client.find("\r\n\r\n")) {
      Serial.println("响应报文体找到，开始解析");
    }
    parseJson(client);
  } else {
    Serial.println("连接服务器失败");
  }
  client.stop();
}

/*************获取知心天气数据解析***************/
void parseJson(WiFiClient client) {
  const size_t capacity = JSON_ARRAY_SIZE(1) + JSON_OBJECT_SIZE(1) + 2 * JSON_OBJECT_SIZE(3) + JSON_OBJECT_SIZE(6) + 230;
  DynamicJsonDocument doc(capacity);
  deserializeJson(doc, client);

  JsonObject obj1 = doc["results"][0];
  // String cityName = obj1["location"]["name"].as<String>();
  // String weather = obj1["now"]["text"].as<String>();
  // String code = obj1["now"]["code"].as<String>();
  // String temperature = obj1["now"]["temperature"].as<String>();
  // int code_int = obj1["now"]["code"].as<int>();

  if (obj1["location"]["name"].as<String>() != "null") {
    cityName = obj1["location"]["name"].as<String>();
    weather = obj1["now"]["text"].as<String>();
    code = obj1["now"]["code"].as<String>();
    temperature = obj1["now"]["temperature"].as<String>();
    code_int = obj1["now"]["code"].as<int>();
    // cityName = cityName_temp;
    // weather = weather_temp;
    // code = code_temp;
    // temperature = temperature_temp;
  }
  Serial.println(cityName);
  Serial.println(code);
  Serial.println(temperature);
}

/****************************************
* LED时钟更新
* 执行周期：200ms
* 优先度1
*****************************************/
void LEDclock(void *pvParameters){
  while(true)
  {
    getLocalTime(&timeinfo);
    Serial.println(&timeinfo, "%b %d %a %T");  // 格式化输出
    
    int tmhour = timeinfo.tm_hour % 12;
    int tmmin = timeinfo.tm_min / 5;
    int tmsec = timeinfo.tm_sec / 5;

    hour.clear();
    minute.clear();

    if(timeinfo.tm_hour >= 5 && timeinfo.tm_hour < 18){
      hour.setPixelColor(tmhour, hour.Color(255, 255, 255));
    }
    else{
      hour.setPixelColor(tmhour, hour.Color(100, 100, 255));
    }
    minute.setPixelColor(tmmin*2, minute.Color(255, 255, 50));
    minute.setPixelColor(tmsec*2+1, minute.Color(150, 50, 50));
    hour.show();
    minute.show();
    vTaskDelay(200/portTICK_PERIOD_MS); //等待200ms
  }
}

/****************************************
* OLED更新
* 执行周期：500ms
* 优先度1
*****************************************/
void OLEDupdate(void *pvParameters) {
  while(true)
  {
    u8g2.clearBuffer();
    u8g2.setFont(u8g2_font_wqy12_t_gb2312);
    
    switch(code_int)
    {
      case(0):
      case(1):
        u8g2.drawXBMP(10, 3, 32, 32, qingtianbaitian);
        u8g2.setCursor(14, 48);
        u8g2.print("晴天");
        break;    
      case(3):
      case(2):
        u8g2.drawXBMP(10, 3, 32, 32, qingtianyewan);
        u8g2.setCursor(14, 48);
        u8g2.print("晴天");
        break;    
      case(4):
        u8g2.drawXBMP(10, 3, 32, 32, yintian);
        u8g2.setCursor(14, 48);
        u8g2.print("多云");
        break;    
      case(5):
        u8g2.drawXBMP(10, 3, 32, 32, duoyun);
        u8g2.setCursor(2, 48);
        u8g2.print("晴间多云");
        break;
      case(6):
        u8g2.drawXBMP(10, 3, 32, 32, yejianduoyun);
        u8g2.setCursor(2, 48);
        u8g2.print("晴间多云");
        break;
      case(7):
        u8g2.drawXBMP(10, 3, 32, 32, duoyun);
        u8g2.setCursor(2, 48);
        u8g2.print("大部多云");
        break;
      case(8):
        u8g2.drawXBMP(10, 3, 32, 32, yejianduoyun);
        u8g2.setCursor(2, 48);
        u8g2.print("大部多云");
        break;
      case(9):
        u8g2.drawXBMP(10, 3, 32, 32, duoyun);
        u8g2.setCursor(14, 48);
        u8g2.print("阴天");
        break;
      case(10):
        u8g2.drawXBMP(10, 3, 32, 32, zhenyu);
        u8g2.setCursor(14, 48);
        u8g2.print("阵雨");
        break;
      case(11):
        u8g2.drawXBMP(10, 3, 32, 32, leizhenyu);
        u8g2.setCursor(8, 48);
        u8g2.print("雷阵雨");
        break;
      case(12):
        u8g2.drawXBMP(10, 3, 32, 32, leizhenyu);
        u8g2.setCursor(0, 48);
        u8g2.print("雷阵雨有冰雹");
        break;  
      case(13):
        u8g2.drawXBMP(10, 3, 32, 32, xiaoyu);
        u8g2.setCursor(14, 48);
        u8g2.print("小雨");
        break;  
      case(14):
        u8g2.drawXBMP(10, 3, 32, 32, zhongyu);
        u8g2.setCursor(14, 48);
        u8g2.print("中雨");
        break;  
        u8g2.drawXBMP(10, 3, 32, 32, zhongyu);
        u8g2.setCursor(14, 48);
        u8g2.print("中雨");
        break;  
      case(15):
        u8g2.drawXBMP(10, 3, 32, 32, dayu);
        u8g2.setCursor(14, 48);
        u8g2.print("大雨");
        break;  
      case(16):
        u8g2.drawXBMP(10, 3, 32, 32, baoyu);
        u8g2.setCursor(14, 48);
        u8g2.print("暴雨");
        break;  
      case(17):
        u8g2.drawXBMP(10, 3, 32, 32, baoyu);
        u8g2.setCursor(14, 48);
        u8g2.print("大暴雨");
        break;  
      case(18):
        u8g2.drawXBMP(10, 3, 32, 32, baoyu);
        u8g2.setCursor(2, 48);
        u8g2.print("特大暴雨");
        break;  
      case(19):
        u8g2.drawXBMP(10, 3, 32, 32, baoyu);
        u8g2.setCursor(14, 48);
        u8g2.print("冻雨");
        break;  
      case(20):
        u8g2.drawXBMP(10, 3, 32, 32, yujiaxue);
        u8g2.setCursor(8, 48);
        u8g2.print("雨夹雪");
        break;  
      case(21):
        u8g2.drawXBMP(10, 3, 32, 32, zhenxue);
        u8g2.setCursor(14, 48);
        u8g2.print("阵雪");
        break;  
      case(22):
        u8g2.drawXBMP(10, 3, 32, 32, xiaoxue);
        u8g2.setCursor(14, 48);
        u8g2.print("小雪");
        break;  
      case(23):
        u8g2.drawXBMP(10, 3, 32, 32, zhongxue);
        u8g2.setCursor(14, 48);
        u8g2.print("中雪");
        break;  
      case(24):
        u8g2.drawXBMP(10, 3, 32, 32, daxue);
        u8g2.setCursor(14, 48);
        u8g2.print("大雪");
        break;  
      case(25):
        u8g2.drawXBMP(10, 3, 32, 32, baoxue);
        u8g2.setCursor(14, 48);
        u8g2.print("暴雪");
        break;  
      case(26):
        u8g2.drawXBMP(10, 3, 32, 32, yangsha);
        u8g2.setCursor(14, 48);
        u8g2.print("浮尘");
        break;  
      case(27):
        u8g2.drawXBMP(10, 3, 32, 32, shachenbao);
        u8g2.setCursor(8, 48);
        u8g2.print("沙尘暴");
        break;  
      case(28):
      case(29):
        u8g2.drawXBMP(10, 3, 32, 32, shachenbao);
        u8g2.setCursor(2, 48);
        u8g2.print("强沙尘暴");
        break;  
      case(30):
        u8g2.drawXBMP(10, 3, 32, 32, wu);
        u8g2.setCursor(20, 48);
        u8g2.print("雾");
        break;  
      case(31):
        u8g2.drawXBMP(10, 3, 32, 32, wumai);
        u8g2.setCursor(20, 48);
        u8g2.print("霾");
        break;  
      case(32):
      case(33):
      case(34):
      case(35):
      case(36):
      case(37):
      case(38):
      default:
        u8g2.drawXBMP(10, 3, 32, 32, N_A);
        u8g2.setCursor(16, 48);
        u8g2.print("N_A");
        break;
    }
  
    //更新天气
    u8g2.setCursor(0, 63);
    u8g2.print(cityName);
    u8g2.print(" ");
    u8g2.print(temperature);
    u8g2.print("℃");

    //更新时间 时间已从ledclock获取
    u8g2.setCursor(72, 47);
    u8g2.print(&timeinfo, "%b %d");
    u8g2.setCursor(64, 63);
    u8g2.print(&timeinfo, "%A");
    
    u8g2.setFont(u8g2_font_logisoso18_tr);
    u8g2.setCursor(63, 27);
    u8g2.print(&timeinfo, "%R");
    u8g2.sendBuffer();

    Serial.println("OLED update");  // 格式化输出    
    vTaskDelay(500/portTICK_PERIOD_MS); //等待500ms
  }
}

/****************************************
* 获取天气数据更新
* 执行周期：13s
* 优先度1
*****************************************/
void WeatherUpdate(void *pvParameters){
  while(true)
  {
    httpRequest();
    Serial.println("WeatherUpdate runing........");
    vTaskDelay(1000*13/portTICK_PERIOD_MS); //等待13s
  }
}

/****************************************
* 初始化
* 执行周期：0xffff
* 优先度
*****************************************/
void ProjInit(void *pvParameters){
  while(true){
    //WS2812 init
    hour.begin();
    minute.begin();

    //OLED init
    u8g2.begin();
    u8g2.enableUTF8Print();  // enable UTF8 support for the Arduino print() function
    delay(10);

    // WIFI连接
    wifi_connect();

    // 获取时间
    // 从网络时间服务器上获取并设置时间
    // 获取成功后芯片会使用RTC时钟保持时间的更新
    configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);
    
    Serial.println("ready"); 
    vTaskDelete(NULL);
  }
}

void setup() {
  Serial.begin(115200);

  
  // 创建任务
  xTaskCreate(ProjInit, "ProjInit", ProjInit_STK_SIZE, NULL, ProjInit_TASK_PRIO, &ProjInit_TaskHandle);
  vTaskDelay(1000*5/portTICK_PERIOD_MS); //等待6s

  xTaskCreate(WeatherUpdate, "WeatherUpdate", WeatherUpdate_STK_SIZE, NULL, WeatherUpdate_TASK_PRIO, &WeatherUpdate_TaskHandle);
  xTaskCreate(LEDclock, "LEDclock", LEDclock_STK_SIZE, NULL, LEDclock_TASK_PRIO, &LEDclock_TaskHandle); 
  xTaskCreate(OLEDupdate, "OLEDupdate", OLEDupdate_STK_SIZE, NULL, OLEDupdate_TASK_PRIO, &OLEDupdate_TaskHandle);
}

void loop() {

}